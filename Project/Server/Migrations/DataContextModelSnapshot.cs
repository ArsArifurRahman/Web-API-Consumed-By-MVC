// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Server.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            FirstName = "Alice",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            FirstName = "Bob",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            FirstName = "Charlie",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("Server.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isbn = "1234567890",
                            PublishedAt = new DateTimeOffset(new DateTime(2024, 6, 4, 21, 3, 36, 306, DateTimeKind.Unspecified).AddTicks(6960), new TimeSpan(0, 6, 0, 0, 0)),
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = 2,
                            Isbn = "2345678901",
                            PublishedAt = new DateTimeOffset(new DateTime(2024, 6, 4, 21, 3, 36, 306, DateTimeKind.Unspecified).AddTicks(7010), new TimeSpan(0, 6, 0, 0, 0)),
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = 3,
                            Isbn = "3456789012",
                            PublishedAt = new DateTimeOffset(new DateTime(2024, 6, 4, 21, 3, 36, 306, DateTimeKind.Unspecified).AddTicks(7014), new TimeSpan(0, 6, 0, 0, 0)),
                            Title = "Book 3"
                        },
                        new
                        {
                            Id = 4,
                            Isbn = "4567890123",
                            PublishedAt = new DateTimeOffset(new DateTime(2024, 6, 4, 21, 3, 36, 306, DateTimeKind.Unspecified).AddTicks(7016), new TimeSpan(0, 6, 0, 0, 0)),
                            Title = "Book 4"
                        },
                        new
                        {
                            Id = 5,
                            Isbn = "5678901234",
                            PublishedAt = new DateTimeOffset(new DateTime(2024, 6, 4, 21, 3, 36, 306, DateTimeKind.Unspecified).AddTicks(7019), new TimeSpan(0, 6, 0, 0, 0)),
                            Title = "Book 5"
                        });
                });

            modelBuilder.Entity("Server.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5
                        });
                });

            modelBuilder.Entity("Server.Models.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 5,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("Server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Catagories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Category 5"
                        });
                });

            modelBuilder.Entity("Server.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Country 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Country 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Country 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Country 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Country 5"
                        });
                });

            modelBuilder.Entity("Server.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Headline = "Review 1",
                            Rating = 5,
                            ReviewText = "This is review 1",
                            ReviewerId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Headline = "Review 2",
                            Rating = 4,
                            ReviewText = "This is review 2",
                            ReviewerId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            Headline = "Review 3",
                            Rating = 3,
                            ReviewText = "This is review 3",
                            ReviewerId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            Headline = "Review 4",
                            Rating = 2,
                            ReviewText = "This is review 4",
                            ReviewerId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Headline = "Review 5",
                            Rating = 1,
                            ReviewText = "This is review 5",
                            ReviewerId = 5
                        });
                });

            modelBuilder.Entity("Server.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Reviewer 1",
                            LastName = "Last 1"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Reviewer 2",
                            LastName = "Last 2"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Reviewer 3",
                            LastName = "Last 3"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Reviewer 4",
                            LastName = "Last 4"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Reviewer 5",
                            LastName = "Last 5"
                        });
                });

            modelBuilder.Entity("Server.Models.Author", b =>
                {
                    b.HasOne("Server.Models.Country", "Country")
                        .WithMany("Authors")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Server.Models.BookAuthor", b =>
                {
                    b.HasOne("Server.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Server.Models.BookCategory", b =>
                {
                    b.HasOne("Server.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Server.Models.Review", b =>
                {
                    b.HasOne("Server.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Server.Models.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("Server.Models.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookCategories");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Server.Models.Category", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("Server.Models.Country", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("Server.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
